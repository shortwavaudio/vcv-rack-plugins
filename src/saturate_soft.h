
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SATURATE_SOFT_H
#define SATURATE_SOFT_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "saturate_soft.tables.h"

static_inline float Saturate_soft_tanh_table_raw_c0(int index){
   return Saturate_soft_tanh_table_c0[index];
};

static_inline float Saturate_soft_tanh_table_raw_c1(int index){
   return Saturate_soft_tanh_table_c1[index];
};

static_inline float Saturate_soft_tanh_table_raw_c2(int index){
   return Saturate_soft_tanh_table_c2[index];
};

static_inline float Saturate_soft_tanh_table(float x){
   int index;
   index = int_clip(float_to_int((5.f * (24.f + x))),0,240);
   return (float_wrap_array(Saturate_soft_tanh_table_c0)[index] + (x * (float_wrap_array(Saturate_soft_tanh_table_c1)[index] + (x * float_wrap_array(Saturate_soft_tanh_table_c2)[index]))));
}

static_inline float Saturate_soft_process(float x){
   return Saturate_soft_tanh_table(x);
};

static_inline void Saturate_soft_noteOn(int note, int velocity, int channel){
}

static_inline void Saturate_soft_noteOff(int note, int channel){
}

static_inline void Saturate_soft_controlChange(int control, int value, int channel){
}

static_inline void Saturate_soft_default(){
}



#endif // SATURATE_SOFT_H
