
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "adsr.h"

// void Util__ctx_type_3_init(Util__ctx_type_3 &_output_){
//    Util__ctx_type_3 _ctx;
//    _ctx.y1 = 0.0f;
//    _ctx.x1 = 0.0f;
//    _output_ = _ctx;
//    return ;
// }

// float Util_dcblock(Util__ctx_type_3 &_ctx, float x0){
//    float y0;
//    y0 = (x0 + (- _ctx.x1) + (0.995f * _ctx.y1));
//    _ctx.x1 = x0;
//    _ctx.y1 = y0;
//    return y0;
// }

void Adsr__ctx_type_0_init(Adsr__ctx_type_0 &_output_){
   Adsr__ctx_type_0 _ctx;
   _ctx.target = 0.0f;
   _ctx.state = 0;
   _ctx.scale = 0.0f;
   _ctx.rate = 0.0f;
   _ctx.out = 0.0f;
   Util__ctx_type_4_init(_ctx._inst955);
   Util__ctx_type_0_init(_ctx._inst251);
   _output_ = _ctx;
   return ;
}

float Adsr_do(Adsr__ctx_type_0 &_ctx, float gate, float a, float d, float s, float r){
   float a_rate;
   a_rate = (1.f / (0.01f + (100.f * a)));
   float d_rate;
   d_rate = (1.f / (0.01f + (100.f * d)));
   float r_rate;
   r_rate = (1.f / (0.01f + (100.f * r)));
   _ctx.out = (_ctx.out + (0.004f * _ctx.rate * (_ctx.target + (- _ctx.out))));
   uint8_t bgate;
   bgate = (gate > 0.0f);
   if(_ctx.state == 0){
      if(Util_edge(_ctx._inst251,bgate)){
         _ctx.state = 1;
         _ctx.scale = (0.2f * gate);
      }
      _ctx.rate = r_rate;
      _ctx.target = 0.0f;
   }
   if(_ctx.state == 1){
      if(bool_not(bgate)){
         _ctx.state = 0;
      }
      if(_ctx.out > 1024.f){
         _ctx.state = 2;
      }
      _ctx.rate = a_rate;
      _ctx.target = 1228.8f;
   }
   if(_ctx.state == 2){
      if(bool_not(bgate)){
         _ctx.state = 0;
      }
      _ctx.rate = d_rate;
      _ctx.target = (1024.f * s);
   }
   return (Util_smooth(_ctx._inst955,_ctx.scale) * float_clip((0.0009765625f * _ctx.out),0.0f,1.f));
}

void Adsr__ctx_type_1_init(Adsr__ctx_type_1 &_output_){
   Adsr__ctx_type_1 _ctx;
   _ctx.knob4 = 0.0f;
   _ctx.knob3 = 0.0f;
   _ctx.knob2 = 0.0f;
   _ctx.knob1 = 0.0f;
   Adsr__ctx_type_0_init(_ctx._inst16);
   _output_ = _ctx;
   return ;
}

void Adsr_controlChange(Adsr__ctx_type_1 &_ctx, int control, int value, int channel){
   if(control == 1){
      _ctx.knob1 = (0.00787401574803f * int_to_float(value));
   }
   if(control == 2){
      _ctx.knob2 = (0.00787401574803f * int_to_float(value));
   }
   if(control == 3){
      _ctx.knob3 = (0.00787401574803f * int_to_float(value));
   }
   if(control == 4){
      _ctx.knob4 = (0.00787401574803f * int_to_float(value));
   }
}


